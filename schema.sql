CREATE TABLE Users(
    UserID INTEGER PRIMARY KEY AUTOINCREMENT,
    UserName TEXT UNIQUE NOT NULL,
    Password TEXT NOT NULL,
    Email TEXT UNIQUE NOT NULL,
    FirstName TEXT NOT NULL,
    LastName TEXT NOT NULL
);

CREATE TABLE Teams (
    TeamID INTEGER PRIMARY KEY AUTOINCREMENT,
    Name TEXT NOT NULL,
    OwnerID INTEGER NOT NULL,
    CreatedOn TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    Description TEXT NOT NULL, 
    UNIQUE(Name, OwnerID)
);

CREATE TABLE Projects (
    ProjectID INTEGER PRIMARY KEY AUTOINCREMENT,
    ProjectName TEXT NOT NULL,
    CreatedOn TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    Description TEXT NOT NULL

)

CREATE TABLE Tasks (
    TaskID INTEGER PRIMARY KEY AUTOINCREMENT,
    Task TEXT NOT NULL,
    CreatedOn TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CreatedBy INTEGER NOT NULL,
    IsCompleted INTEGER NOT NULL DEFAULT 0,
    FOREIGN KEY (CreatedBy) REFERENCES Users (UserID),
    CHECK (isCompleted == 0 or isCompleted == 1)
);

CREATE TABLE UserTeams (
    UserTeamID INTEGER PRIMARY KEY AUTOINCREMENT,
    UserID INTEGER NOT NULL,
    TeamID INTEGER NOT NULL,
    FOREIGN KEY (UserID) REFERENCES Users (UserID),
    FOREIGN KEY (TeamID) REFERENCES Teams (TeamID)
);


CREATE TABLE TeamsTasks (
    TeamTaskID INTEGER PRIMARY KEY AUTOINCREMENT,
    TeamID INTEGER NOT NULL,
    TaskID INTEGER NOT NULL,
    FOREIGN KEY (TeamID) REFERENCES Teams (TeamID),
    FOREIGN KEY (TaskID) REFERENCES Tasks (TaskID)
);


CREATE TABLE TaskHistory (
    TaskID INTEGER NOT NULL,
    ModifiedDate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    ChangeType TEXT NOT NULL,
    ChangedBy INTEGER NOT NULL,
    OldText TEXT NOT NULL,
    NewText TEXT NOT NULL,
    FOREIGN KEY (TaskID) REFERENCES Tasks (TaskID),
    FOREIGN KEY (ChangedBy) REFERENCES Users (UserID),
    PRIMARY KEY (TaskID, ModifiedDate),
    CHECK(ChangeType IN ('A', 'C', 'D', 'M'))
);


CREATE TABLE Comments (
    CommentID INTEGER PRIMARY KEY AUTOINCREMENT,
    CommentText TEXT NOT NULL,
    CommentedBy INTEGER NOT NULL,
    FOREIGN KEY (CommentedBy) REFERENCES Users (UserID)
);


CREATE TABLE TaskComments (
    TaskCommentID INTEGER PRIMARY KEY AUTOINCREMENT,
    CommentID INTEGER NOT NULL,
    TaskID INTEGER NOT NULL,
    CreatedOn TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (CommentID) REFERENCES Comments (CommentID),
    FOREIGN KEY (TaskID) REFERENCES Tasks (TaskID)
);